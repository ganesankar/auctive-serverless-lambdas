
service: serverlessproject

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  profile: serverlessAccount
  environment:
      tableName: ${self:custom.tableName}
      tokenSecret: ${self:custom.tokenSecret}
      region: ${self:provider.region}
      cloudSearchDocEndpoint: ${self:custom.cloudSearchDocEndpoint}
      cloudSearchEndpoint: ${self:custom.cloudSearchEndpoint}
      dynamoStreamArn: ${self:custom.dynamoStreamArn}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - s3:*
            - ses:*
            - cloudsearch:*
            - sns:*
          Resource: '*'
  apiGateway:
    apiKeys:
      - adminApiKey

plugins:
    - serverless-webpack
    - serverless-offline

package:
    individually: true

custom:
    tableName: your value here
    tokenSecret: your value here
    cloudSearchDocEndpoint: your value here
    cloudSearchEndpoint: your value here
    dynamoStreamArn: your value here
    webpack:
      webpackConfig: ./webpack.config.js

functions:
  test:
    handler: lambdas/endpoints/user/test.handler
    events:
      - http:
            path: test/
            method: GET
            cors: true
  getUser:
    handler: lambdas/endpoints/user/getUser.handler
    events:
        - http:
              path: users/user
              method: GET
              cors: true
        - http:
              path: users/{email}
              method: GET
              cors: true
  createUser:
    handler: lambdas/endpoints/user/createUser.handler
    events:
      - http:
            path: users/
            method: POST
            cors: true
  login:
    handler: lambdas/endpoints/user/userLogin.handler
    events:
      - http:
            path: users/login
            method: POST
            cors: true

  searchAuctions:
    handler: lambdas/endpoints/auction/getAuctions.handler
    events:
      - http:
            path: auctions/
            method: GET
            cors: true

  sendSMS:
    handler: lambdas/endpoints/sms/sendSMS.handler
    events:
      - http:
            path: send-sms/
            method: POST
            cors: true
            private: true 
  
  stream2cloudsearch:
    handler: lambdas/streams/stream2cloudsearch.handler
    events:
      - stream: ${self:custom.dynamoStreamArn}
